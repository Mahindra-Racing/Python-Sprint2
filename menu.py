import random
import subprocess
import webbrowser
import sys

def menu():
    print('''
Menu
    [1] - Iniciar Quiz
    [2] - Simular Corrida
    [3] - Site Oficial da F√≥rmula E
    [4] - Sair
    ''')
    escolha = input('Escolha uma op√ß√£o: ')
    return escolha

def main():
    while True:
        escolha = menu()

        if escolha == "1":
            print('\nVoc√™ escolheu a op√ß√£o 1: Iniciar Quiz.\n')
            menu_quiz()
        elif escolha == "2":
            print('\nVoc√™ escolheu a op√ß√£o 2: Simular Corrida.\n')
            # Executa corrida.py e captura o c√≥digo de sa√≠da
            result = subprocess.run(["python", "corrida.py"])
            if result.returncode == 1:
                print('\nSaindo do programa. At√© mais!')
                sys.exit()
        elif escolha == "3":
            print('\nVoc√™ escolheu a op√ß√£o 3: Acessar Site Oficial da F√≥rmula E.\n')
            url = 'https://synthica.netlify.app/'
            webbrowser.open(url)
        elif escolha == "4":
            print('\nSaindo do programa. At√© mais!')
            sys.exit()
        else:
            print('\nOp√ß√£o inv√°lida. Por favor, escolha uma op√ß√£o v√°lida.\n')

# Dicion√°rio com perguntas e respostas
quiz_data = {
    "perguntas": [
        "Qual √© a principal caracter√≠stica que diferencia a F√≥rmula E de outras categorias de automobilismo?",
        "Qual cidade sediou a primeira corrida da F√≥rmula E?",
        "Qual √© o nome do campeonato de pilotos da F√≥rmula E?",
        "Qual √© o nome do trof√©u concedido ao vencedor do campeonato de equipes na F√≥rmula E?",
        "Em qual ano foi criada a F√≥rmula E?",
        "Qual √© a dura√ß√£o t√≠pica de uma corrida da F√≥rmula E?",
        "Qual piloto det√©m o maior n√∫mero de vit√≥rias na F√≥rmula E at√© 2024?",
        "Qual equipe foi a campe√£ da temporada inaugural da F√≥rmula E?",
        "Qual √© o nome da bateria utilizada nos carros da F√≥rmula E?",
        "Qual inova√ß√£o tecnol√≥gica √© frequentemente testada na F√≥rmula E para promover a sustentabilidade?"
    ],
    "opcoes": [
        {
            "a": "Uso de combust√≠veis f√≥sseis",
            "b": "Ve√≠culos com motor a combust√£o interna",
            "c": "Carros totalmente el√©tricos",
            "d": "Corridas em pistas de terra",
            "e": "Ve√≠culos com pneus de trilha"
        },
        {
            "a": "Paris",
            "b": "Londres",
            "c": "Beijing",
            "d": "Nova York",
            "e": "S√£o Paulo"
        },
        {
            "a": "Campeonato de Pilotos da F√≥rmula E",
            "b": "Campeonato Mundial de F√≥rmula E",
            "c": "Campeonato de Corridas El√©tricas",
            "d": "Campeonato de F√≥rmula El√©trica",
            "e": "Campeonato Global de E-Pilotos"
        },
        {
            "a": "Trof√©u de Campe√£o de Equipes",
            "b": "Trof√©u de Equipe do Ano",
            "c": "Trof√©u de Campe√£o Mundial de Equipes",
            "d": "Trof√©u de Equipe de F√≥rmula E",
            "e": "Trof√©u de Equipe Campe√£"
        },
        {
            "a": "2010",
            "b": "2012",
            "c": "2014",
            "d": "2016",
            "e": "2018"
        },
        {
            "a": "30 minutos",
            "b": "45 minutos",
            "c": "60 minutos",
            "d": "90 minutos",
            "e": "120 minutos"
        },
        {
            "a": "Lucas di Grassi",
            "b": "S√©bastien Buemi",
            "c": "Jean-√âric Vergne",
            "d": "Ant√≥nio F√©lix da Costa",
            "e": "Mitch Evans"
        },
        {
            "a": "DS Techeetah",
            "b": "e.dams Renault",
            "c": "Audi Sport ABT",
            "d": "BMW i Andretti",
            "e": "Jaguar Racing"
        },
        {
            "a": "√çon de l√≠tio",
            "b": "NMC",
            "c": "LFP",
            "d": "Solid-state",
            "e": "Pot√°ssio"
        },
        {
            "a": "Pain√©is solares nos carros",
            "b": "Biocombust√≠veis",
            "c": "Tecnologias de recupera√ß√£o de energia",
            "d": "Pneus biodegrad√°veis",
            "e": "Carros aut√¥nomos"
        }
    ],
    "respostas": [
        "c",
        "c",
        "b",
        "c",
        "c",
        "c",
        "c",
        "b",
        "a",
        "c"
    ]
}

def fazer_pergunta(numero, pergunta, opcoes, resposta_certa):
    print(f'---------------------\nPergunta {numero}: {pergunta}')

    for chave, valor in opcoes.items():
        print(f"  {chave}) {valor}")

    while True:
        resposta = input("Sua resposta (a/b/c/d/e): ").strip().lower()
        if resposta in opcoes:
            break
        else:
            print("Op√ß√£o inv√°lida. Por favor, escolha uma op√ß√£o v√°lida (a/b/c/d/e).")

    if resposta == resposta_certa:
        print("‚úÖ Correto!\n")
        return True
    else:
        resposta_upper = resposta_certa.upper()
        resposta_texto = opcoes[resposta_certa]
        print(f"‚ùå Incorreto! A resposta correta era {resposta_upper}) {resposta_texto}\n")
        return False

def quiz():
    perguntas = quiz_data["perguntas"]
    opcoes = quiz_data["opcoes"]
    respostas = quiz_data["respostas"]

    indices = list(range(len(perguntas)))
    random.shuffle(indices)  # Randomiza a ordem das perguntas

    pontuacao = 0
    total_perguntas = len(perguntas)

    for idx, i in enumerate(indices, 1):
        pergunta = perguntas[i]
        opcoes_pergunta = opcoes[i]
        resposta_certa = respostas[i]

        if fazer_pergunta(idx, pergunta, opcoes_pergunta, resposta_certa):
            pontuacao += 1

    print(f"üéâ Seu resultado: {pontuacao}/{total_perguntas}")

    while True:
        escolha = input('Escolha uma op√ß√£o:\n  [1] Voltar ao menu\n  [2] Sair\nSua escolha: ').strip()
        if escolha == "1":
            print()
            return  # Retorna ao loop principal
        elif escolha == "2":
            print('\nSaindo do programa. At√© mais!')
            sys.exit()
        else:
            print('Op√ß√£o inv√°lida. Por favor, escolha uma op√ß√£o v√°lida (1/2).\n')

def competitivo():
    print("\nüèÅ Modo Competitivo - Dois Jogadores üèÅ")
    jogador1 = input('Nome do Jogador 1: ').strip()
    jogador2 = input('Nome do Jogador 2: ').strip()

    if not jogador1 or not jogador2:
        print("Os nomes dos jogadores n√£o podem estar vazios.")
        return competitivo()

    perguntas = quiz_data["perguntas"]
    opcoes = quiz_data["opcoes"]
    respostas = quiz_data["respostas"]

    indices = list(range(len(perguntas)))
    random.shuffle(indices)  # Randomiza a ordem das perguntas

    total_perguntas = len(perguntas)
    pontuacao_jogador_1 = 0
    pontuacao_jogador_2 = 0

    print(f"\nüîπ Turno do {jogador1} üîπ")
    for idx, i in enumerate(indices, 1):
        pergunta = perguntas[i]
        opcoes_pergunta = opcoes[i]
        resposta_certa = respostas[i]

        if fazer_pergunta(idx, pergunta, opcoes_pergunta, resposta_certa):
            pontuacao_jogador_1 += 1

    print(f"\nüîπ Turno do {jogador2} üîπ")
    for idx, i in enumerate(indices, 1):
        pergunta = perguntas[i]
        opcoes_pergunta = opcoes[i]
        resposta_certa = respostas[i]

        if fazer_pergunta(idx, pergunta, opcoes_pergunta, resposta_certa):
            pontuacao_jogador_2 += 1

    print("\nüèÜ Resultado Final üèÜ")
    print(f"{jogador1}: {pontuacao_jogador_1}/{total_perguntas}")
    print(f"{jogador2}: {pontuacao_jogador_2}/{total_perguntas}")

    if pontuacao_jogador_1 > pontuacao_jogador_2:
        print(f"üéâ O vencedor √© {jogador1}! üéâ\n")
    elif pontuacao_jogador_2 > pontuacao_jogador_1:
        print(f"üéâ O vencedor √© {jogador2}! üéâ\n")
    else:
        print("ü§ù Empate! ü§ù\n")

    while True:
        escolha = input('Escolha uma op√ß√£o:\n  [1] Voltar ao menu\n  [2] Sair\nSua escolha: ').strip()
        if escolha == "1":
            print()
            return  # Retorna ao loop principal
        elif escolha == "2":
            print('\nSaindo do programa. At√© mais!')
            sys.exit()
        else:
            print('Op√ß√£o inv√°lida. Por favor, escolha uma op√ß√£o v√°lida (1/2).\n')

def menu_quiz():
    print('''
Modo de Jogo
    [1] - Solo
    [2] - Competitivo
    [3] - Voltar para o Menu
    ''')
    while True:
        escolha = input('Escolha uma op√ß√£o: ').strip()

        if escolha == "1":
            print('\nVoc√™ escolheu jogar no modo Solo.\n')
            quiz()
            break
        elif escolha == "2":
            print('\nVoc√™ escolheu jogar no modo Competitivo.\n')
            competitivo()
            break
        elif escolha == "3":
            print()
            return  # Retorna ao loop principal
        else:
            print('Op√ß√£o inv√°lida. Por favor, escolha uma op√ß√£o v√°lida (1/2/3).\n')

if __name__ == "__main__":
    main()
